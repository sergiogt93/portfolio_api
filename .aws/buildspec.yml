version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
        commands:
      - echo Iniciando el daemon de Docker...
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - echo Esperando a que Docker se inicie...
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      - echo Iniciando sesión en Amazon ECR...
      - aws --version
      - echo Región por defecto $AWS_DEFAULT_REGION
      - $(aws ecr get-login --no-include-email --region us-east-1)
      - echo Obteniendo URI del repositorio...
      - REPOSITORY_URI=814828317824.dkr.ecr.us-east-1.amazonaws.com/api-portfolio
      - echo Obteniendo hash del commit...
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo Generando etiqueta de imagen...
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Compilación iniciada el `date`
      - echo Construyendo la imagen Docker...
      - docker build -t $REPOSITORY_URI:latest -f .docker/Dockerfile.dev .
      - echo Etiquetando la imagen Docker...
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Compilación completada el `date`
      - echo Empujando las imágenes Docker...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Escribiendo el archivo de definiciones de imagen...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files: imagedefinitions.json